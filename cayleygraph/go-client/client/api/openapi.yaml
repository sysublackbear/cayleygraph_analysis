openapi: 3.0.0
info:
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Cayley API
  version: 2.1.0
servers:
- url: http://{host}:{port}
  variables:
    host:
      default: localhost
    port:
      default: "64210"
tags:
- description: Reading and writing data
  name: data
- description: Querying the graph
  name: queries
paths:
  /api/v2/formats:
    get:
      operationId: listFormats
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Returns a list of supported data formats
      tags:
      - data
  /api/v2/read:
    get:
      operationId: readQuads
      parameters:
      - description: Data encoder to use for response. Overrides Accept header.
        explode: true
        in: query
        name: format
        required: false
        schema:
          default: nquads
          enum:
          - nquads
          - jsonld
          - json
          - json-stream
          - pquads
          - graphviz
          - gml
          - graphml
          type: string
        style: form
      - description: Subjects to filter quads by
        explode: true
        in: query
        name: sub
        required: false
        schema:
          type: string
        style: form
      - description: Predicates to filter quads by
        explode: true
        in: query
        name: pred
        required: false
        schema:
          type: string
        style: form
      - description: Objects to filter quads by
        explode: true
        in: query
        name: obj
        required: false
        schema:
          type: string
        style: form
      - description: Labels to filter quads by
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: IRI format to use
        explode: true
        in: query
        name: iri
        required: false
        schema:
          enum:
          - short
          - full
          type: string
        style: form
      responses:
        200:
          content:
            application/n-quads:
              schema:
                $ref: '#/components/schemas/NQuads'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JSONLD'
            application/json:
              schema:
                $ref: '#/components/schemas/JsonQuads'
            application/x-json-stream:
              schema:
                $ref: '#/components/schemas/JsonQuadsStream'
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/PQuads'
          description: read successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Reads all quads from the database
      tags:
      - data
  /api/v2/write:
    post:
      operationId: writeQuads
      parameters:
      - description: Data decoder to use for request. Overrides Content-Type.
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/n-quads:
            schema:
              $ref: '#/components/schemas/NQuads'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JSONLD'
          application/json:
            schema:
              $ref: '#/components/schemas/JsonQuads'
          application/x-json-stream:
            schema:
              $ref: '#/components/schemas/JsonQuadsStream'
          application/x-protobuf:
            schema:
              $ref: '#/components/schemas/PQuads'
        description: File in one of formats specified in Content-Type.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: write successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Writes quads to the database
      tags:
      - data
  /api/v2/node/delete:
    post:
      operationId: deleteNode
      parameters:
      - description: Data decoder to use for request. Overrides Content-Type.
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/n-quads:
            schema:
              $ref: '#/components/schemas/NQuadsNode'
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
          application/x-protobuf:
            schema:
              $ref: '#/components/schemas/PNode'
        description: File in one of formats specified in Content-Type.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: delete successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Removes a node add all associated quads
      tags:
      - data
  /api/v2/delete:
    post:
      operationId: deleteQuads
      parameters:
      - description: Data decoder to use for request. Overrides Content-Type.
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/n-quads:
            schema:
              $ref: '#/components/schemas/NQuads'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JSONLD'
          application/json:
            schema:
              $ref: '#/components/schemas/JsonQuads'
          application/x-json-stream:
            schema:
              $ref: '#/components/schemas/JsonQuadsStream'
          application/x-protobuf:
            schema:
              $ref: '#/components/schemas/PQuads'
        description: File in one of formats specified in Content-Type.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: write successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete quads from the database
      tags:
      - data
  /api/v2/query:
    get:
      operationId: query-get
      parameters:
      - description: Query language to use
        explode: true
        in: query
        name: lang
        required: true
        schema:
          enum:
          - gizmo
          - graphql
          - mql
          - sexp
          type: string
        style: form
      - description: Query text
        explode: true
        in: query
        name: qu
        required: true
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: query succesful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Query the graph
      tags:
      - queries
    post:
      operationId: query
      parameters:
      - description: Query language to use
        explode: true
        in: query
        name: lang
        required: true
        schema:
          enum:
          - gizmo
          - graphql
          - mql
          - sexp
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            examples:
              gizmo:
                summary: 'Gizmo: first 10 nodes'
                value: g.V().getLimit(10)
              graphql:
                summary: 'GraphQL: first 10 nodes'
                value: |-
                  {
                    nodes(first: 10){
                      id
                    }
                  }
            schema:
              type: string
        description: Query text
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: query succesful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Query the graph
      tags:
      - queries
  /gephi/gs:
    get:
      operationId: gephiGraphStream
      parameters:
      - description: Streamer mode
        explode: true
        in: query
        name: mode
        required: false
        schema:
          default: raw
          enum:
          - raw
          - nodes
          type: string
        style: form
      - description: Limit the number of nodes or quads
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Subjects to filter quads by
        explode: true
        in: query
        name: sub
        required: false
        schema:
          type: string
        style: form
      - description: Predicates to filter quads by
        explode: true
        in: query
        name: pred
        required: false
        schema:
          type: string
        style: form
      - description: Objects to filter quads by
        explode: true
        in: query
        name: obj
        required: false
        schema:
          type: string
        style: form
      - description: Labels to filter quads by
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/stream+json:
              schema:
                description: stream of JSON objects
                format: binary
                type: string
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Gephi GraphStream endpoint
      tags:
      - queries
components:
  schemas:
    QueryResult:
      example:
        result:
        - '{}'
        - '{}'
      properties:
        result:
          items:
            type: object
          nullable: true
          type: array
      type: object
    NQuads:
      format: binary
      type: string
    NQuadsNode:
      format: binary
      type: string
    JSONLD:
      externalDocs:
        url: https://json-ld.org
      format: binary
      type: string
    JsonQuad:
      properties:
        subject:
          type: string
        predicate:
          type: string
        object:
          type: string
        label:
          type: string
      type: object
    JsonQuads:
      items:
        properties:
          subject:
            type: string
          predicate:
            type: string
          object:
            type: string
          label:
            type: string
        type: object
      type: array
    JsonNode:
      type: string
    JsonQuadsStream:
      description: stream of JsonQuad objects
      format: binary
      type: string
    PQuads:
      description: Cayley-specific binary encoding of quads based on protobuf
      format: binary
      type: string
    PNode:
      description: Cayley-specific binary encoding of node value based on protobuf
      format: binary
      type: string
    Error:
      properties:
        error:
          description: error message
          type: string
      type: object
    inline_response_200:
      example:
        ext:
        - ext
        - ext
        read: true
        nodes: true
        mime:
        - mime
        - mime
        binary: true
        id: id
        write: true
      properties:
        id:
          description: unique name of the format
          type: string
        read:
          description: format is supported for loading quads
          type: boolean
        write:
          description: format is supported for exporting quads
          type: boolean
        nodes:
          description: format can be used to describe nodes
          type: boolean
        ext:
          description: typical file extensions for this format
          items:
            type: string
          type: array
        mime:
          description: typical content types for this format
          items:
            type: string
          type: array
        binary:
          description: format uses binary encoding
          type: boolean
    inline_response_200_1:
      example:
        result: result
        count: 0
      properties:
        result:
          description: legacy success message
          type: string
        count:
          description: number of quads received
          type: integer
    inline_response_200_2:
      example:
        result: result
        count: 0
      properties:
        result:
          description: legacy success message
          type: string
        count:
          description: number of nodes deleted
          type: integer
